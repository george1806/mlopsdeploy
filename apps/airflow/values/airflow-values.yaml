global:
  security:
    allowInsecureImages: true

images:
  airflow:
    repository: ${HARBOR_URL}/${HARBOR_PROJECT}/airflow
    tag: "${AIRFLOW_TAG}-oauth"
    pullPolicy: IfNotPresent
  statsd:
    repository: ${HARBOR_URL}/${HARBOR_PROJECT}/statsd-exporter
    tag: "v0.28.0"
    pullPolicy: IfNotPresent

imagePullSecrets:
  - name: harbor-creds

executor: ${AIRFLOW_EXECUTOR}

# Airflow version
airflowVersion: 3.0.2

# Core configuration for Airflow 3.0
config:
  core:
    auth_manager: airflow.providers.fab.auth_manager.fab_auth_manager.FabAuthManager
  fab:
    config_file: /opt/airflow/webserver_config.py
  webserver:
    authenticate: True
    oauth_providers: '[{"name": "keycloak", "token_key": "access_token", "icon": "fa-key", "remote_app": {"client_id": "${KEYCLOAK_CLIENT_ID}", "client_secret": "${KEYCLOAK_CLIENT_SECRET}", "api_base_url": "${KEYCLOAK_HOST}/realms/${KEYCLOAK_REALM}/protocol/openid-connect/", "client_kwargs": {"scope": "openid email profile"}, "access_token_method": "POST", "access_token_params": {"grant_type": "authorization_code"}, "request_token_url": null, "access_token_url": "${KEYCLOAK_HOST}/realms/${KEYCLOAK_REALM}/protocol/openid-connect/token", "authorize_url": "${KEYCLOAK_HOST}/realms/${KEYCLOAK_REALM}/protocol/openid-connect/auth"}}]'
  api:
    secret_key: "${AIRFLOW_WEBSERVER_SECRET_KEY}"

# Disable bundled DB/Redis
postgresql:
  enabled: false
redis:
  enabled: false

# External PostgreSQL and Redis configuration
data:
  metadataConnection:
    user: ${AIRFLOW_DB_USER}
    pass: ${AIRFLOW_DB_PASSWORD}
    protocol: postgresql
    host: ${AIRFLOW_DB_HOST}
    port: ${AIRFLOW_DB_PORT}
    db: ${AIRFLOW_DB_NAME}
    sslmode: disable
  brokerUrl: redis://:${AIRFLOW_REDIS_PASSWORD}@${AIRFLOW_REDIS_HOST}:${AIRFLOW_REDIS_PORT}/0
  resultBackendConnection:
    user: ${AIRFLOW_DB_USER}
    pass: ${AIRFLOW_DB_PASSWORD}
    protocol: postgresql
    host: ${AIRFLOW_DB_HOST}
    port: ${AIRFLOW_DB_PORT}
    db: ${AIRFLOW_DB_NAME}
    sslmode: disable

# Static secret keys for production
fernetKey: "${AIRFLOW_FERNET_KEY}"
# webserverSecretKey moved to config.api.secret_key for Airflow 3.0
# webserverSecretKey: "webserver-secret-key-change-me-in-production"

# ✅ Disable migrations (handled manually/patch)
migrateDatabaseJob:
  enabled: false

checkMigrations:
  enabled: false

# Ingress via Traefik + TLS (In Airflow 3.0, API server serves both API and Web UI)
ingress:
  web:
    enabled: false
  apiServer:
    enabled: true
    ingressClassName: traefik-dev
    path: "/"
    pathType: "Prefix"
    hosts:
      - name: ${AIRFLOW_HOST}
        tls:
          enabled: true
          secretName: ${TLS_SECRET_NAME}
    annotations:
      traefik.ingress.kubernetes.io/router.entrypoints: websecure
      traefik.ingress.kubernetes.io/router.tls: "true"

# Persistence for logs
persistence:
  enabled: true
  size: 20Gi
  accessMode: ReadWriteOnce

podSecurityContext:
  enabled: true
  fsGroup: 1000
  seccompProfile:
    type: RuntimeDefault

containerSecurityContext:
  enabled: true
  runAsUser: 50000
  runAsNonRoot: true
  allowPrivilegeEscalation: false
  capabilities:
    drop: ["ALL"]

scheduler:
  waitForMigrations:
    enabled: false
  resources:
    requests:
      memory: "512Mi"
      cpu: "250m"

# Webserver (OIDC Keycloak auth, default port 8080)
webserver:
  enabled: true
  waitForMigrations:
    enabled: false
  resources:
    requests:
      memory: "512Mi"
      cpu: "250m"
    limits:
      memory: "1Gi"
      cpu: "500m"
  service:
    type: ClusterIP
    ports:
      - name: airflow-ui
        port: 8080 # ✅ restored default port
  env:
    - name: AIRFLOW__WEBSERVER__AUTHENTICATE
      value: "True"
    - name: AIRFLOW__WEBSERVER__RBAC
      value: "True"
    - name: AIRFLOW__WEBSERVER__OAUTH_PROVIDERS
      value: '[{"name": "keycloak", "token_key": "access_token", "icon": "fa-key", "remote_app": {"client_id": "${KEYCLOAK_CLIENT_ID}", "client_secret": "${KEYCLOAK_CLIENT_SECRET}", "api_base_url": "${KEYCLOAK_HOST}/realms/${KEYCLOAK_REALM}/protocol/openid-connect/", "client_kwargs": {"scope": "openid email profile"}, "access_token_method": "POST", "access_token_params": {"grant_type": "authorization_code"}, "request_token_url": null, "access_token_url": "${KEYCLOAK_HOST}/realms/${KEYCLOAK_REALM}/protocol/openid-connect/token", "authorize_url": "${KEYCLOAK_HOST}/realms/${KEYCLOAK_REALM}/protocol/openid-connect/auth"}}]'
  defaultUser:
    enabled: true
    role: Admin
    username: ${AIRFLOW_ADMIN_USERNAME}
    email: ${AIRFLOW_ADMIN_EMAIL}
    firstName: ${AIRFLOW_ADMIN_FIRSTNAME}
    lastName: ${AIRFLOW_ADMIN_LASTNAME}
    password: ${AIRFLOW_ADMIN_PASSWORD}

workers:
  waitForMigrations:
    enabled: false
  resources:
    requests:
      memory: "512Mi"
      cpu: "250m"

triggerer:
  waitForMigrations:
    enabled: false
  resources:
    requests:
      memory: "512Mi"
      cpu: "250m"

dagProcessor:
  waitForMigrations:
    enabled: false
  resources:
    requests:
      memory: "512Mi"
      cpu: "250m"

apiServer:
  waitForMigrations:
    enabled: false
  resources:
    requests:
      memory: "512Mi"
      cpu: "400m"
    limits:
      memory: "1Gi"
      cpu: "800m"
  command:
    - bash
    - -c
    - exec airflow api-server --workers 1
  env:
    # Fix for Airflow 3.0 uvicorn child process dying issue
    - name: WEB_CONCURRENCY
      value: "1"
    # OAuth configuration for Keycloak integration
    - name: AIRFLOW__WEBSERVER__AUTHENTICATE
      value: "True"
    - name: AIRFLOW__WEBSERVER__RBAC
      value: "True"
    - name: AIRFLOW__WEBSERVER__OAUTH_PROVIDERS
      value: '[{"name": "keycloak", "token_key": "access_token", "icon": "fa-key", "remote_app": {"client_id": "${KEYCLOAK_CLIENT_ID}", "client_secret": "${KEYCLOAK_CLIENT_SECRET}", "api_base_url": "${KEYCLOAK_HOST}/realms/${KEYCLOAK_REALM}/protocol/openid-connect/", "client_kwargs": {"scope": "openid email profile"}, "access_token_method": "POST", "access_token_params": {"grant_type": "authorization_code"}, "request_token_url": null, "access_token_url": "${KEYCLOAK_HOST}/realms/${KEYCLOAK_REALM}/protocol/openid-connect/token", "authorize_url": "${KEYCLOAK_HOST}/realms/${KEYCLOAK_REALM}/protocol/openid-connect/auth"}}]'
    # Keycloak environment variables for webserver_config.py
    - name: KEYCLOAK_HOST
      value: "${KEYCLOAK_HOST}"
    - name: KEYCLOAK_INTERNAL_HOST
      value: "${KEYCLOAK_INTERNAL_HOST}"
    - name: KEYCLOAK_REALM
      value: "${KEYCLOAK_REALM}"
    - name: KEYCLOAK_CLIENT_ID
      value: "${KEYCLOAK_CLIENT_ID}"
    - name: KEYCLOAK_CLIENT_SECRET
      value: "${KEYCLOAK_CLIENT_SECRET}"
    - name: AIRFLOW_URL
      value: "${AIRFLOW_URL}"
  extraVolumes:
    - name: webserver-config
      configMap:
        name: airflow-webserver-config
  extraVolumeMounts:
    - name: webserver-config
      mountPath: /opt/airflow/webserver_config.py
      subPath: webserver_config.py
